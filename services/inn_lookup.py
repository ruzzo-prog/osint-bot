# services/inn_lookup.py ‚Äî –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –ò–ù–ù —á–µ—Ä–µ–∑ Dadata
# –ü—É—Ç—å: D:\telbot\services\inn_lookup.py

import requests
from config import DA_DATA_API_KEY

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DA_DADATA_URL = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party"
HEADERS = {
    "Content-Type": "application/json",
    "Accept": "application/json",
    "Authorization": f"Token {DA_DATA_API_KEY}",
}

# –ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
STATUS_TRANSLATION = {
    "ACTIVE": "–¥–µ–π—Å—Ç–≤—É—é—â–∞—è",
    "LIQUIDATING": "–ª–∏–∫–≤–∏–¥–∏—Ä—É–µ—Ç—Å—è",
    "LIQUIDATED": "–ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞",
}


def lookup_inn(inn: str) -> str:
    """
    –ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ –ò–ù–ù —á–µ—Ä–µ–∑ DaData.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    """
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ò–ù–ù
    if not inn.isdigit() or len(inn) not in (10, 12):
        return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ù–ù ‚Äî –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä."

    payload = {"query": inn, "count": 1}

    # 2. –ó–∞–ø—Ä–æ—Å
    try:
        resp = requests.post(DA_DADATA_URL, json=payload, headers=HEADERS, timeout=5)
        resp.raise_for_status()
    except requests.RequestException as e:
        print(f"[ERROR] HTTP error: {e}")
        return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ DaData. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    # 3. –ü–∞—Ä—Å–∏–Ω–≥ JSON
    try:
        data = resp.json()
    except ValueError as e:
        print(f"[ERROR] JSON parse error: {e}")
        return "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    suggestions = data.get("suggestions") or []
    if not suggestions or not suggestions[0].get("data"):
        return "‚ùå –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å —Ç–∞–∫–∏–º –ò–ù–ù –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

    org = suggestions[0]["data"]

    # 4. –°–±–æ—Ä —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    name = org.get("name", {}).get("full_with_opf", "‚Äî")
    inn_val = org.get("inn", "‚Äî")
    kpp_val = org.get("kpp", "‚Äî")
    ogrn_val = org.get("ogrn", "‚Äî")

    state = org.get("state", {}) or {}
    status_en = state.get("status", "").upper()
    status_ru = STATUS_TRANSLATION.get(status_en, status_en.capitalize() or "‚Äî")

    addr = org.get("address", {}).get("value", "‚Äî")

    mgr = org.get("management") or {}
    mgr_name = mgr.get("name", "‚Äî")
    mgr_post = mgr.get("post", "")

    opf = org.get("opf", {}) or {}
    form = opf.get("full", "‚Äî")

    okved_code = org.get("okved", "‚Äî")
    okved_type = org.get("okved_type", "")
    okved = f"{okved_code}{f' ‚Äî {okved_type}' if okved_type else ''}"

    # 5. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ–¥–µ–Ω–∏–π –æ–± –ò–§–ù–° (authorities ‚Äì –æ–±—ä–µ–∫—Ç, –∞ –Ω–µ —Å–ø–∏—Å–æ–∫)
    authorities = org.get("authorities") or {}
    fts_reg = authorities.get("fts_registration") or {}
    tax_authority = fts_reg.get("name", "‚Äî")

    # 6. –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    return (
        f"üè¢ {name}\n"
        f"–ò–ù–ù: {inn_val}\n"
        f"–ö–ü–ü: {kpp_val}\n"
        f"–û–ì–†–ù: {ogrn_val}\n"
        f"–°—Ç–∞—Ç—É—Å: {status_ru}\n"
        f"–ê–¥—Ä–µ—Å: {addr}\n"
        f"–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: {mgr_name}{f' ({mgr_post})' if mgr_post else ''}\n"
        f"–§–æ—Ä–º–∞: {form}\n"
        f"–°–≤–µ–¥–µ–Ω–∏—è –ò–§–ù–°: {tax_authority}\n"
        f"–û—Å–Ω–æ–≤–Ω–æ–π –û–ö–í–≠–î: {okved}"
    )
